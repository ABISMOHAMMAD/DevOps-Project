name: Build and Push Image

on:
    repository_dispatch:
        types:
            - trigger-workflow02
    workflow_dispatch:
        inputs:
            action:
                description: "Terraform action"
                required: true
                type: choice
                options:
                    - plan
                    - apply
                    - destroy

env:
    AWS_REGION: ap-south-1
    ECR_REPOSITORY: 618283574186.dkr.ecr.ap-south-1.amazonaws.com/abismohammad

permissions:
    id-token: write
    contents: read

jobs:
    terraform:
        name: Terraform by EKS Cluster
        runs-on: ubuntu-latest

        defaults:
            run:
                shell: bash
                working-directory: terraform

        steps:
            - name: Checkout repository
              uses: actions/checkout@v4

            - name: Setup Terraform
              uses: hashicorp/setup-terraform@v3
              with:
                  terraform_version: "1.1.7"

            - name: Authenticate against AWS using OIDC credentials
              uses: aws-actions/configure-aws-credentials@v4
              with:
                  role-to-assume: arn:aws:iam::618283574186:role/Github_CD_Role
                  aws-region: ${{env.AWS_REGION}}

            - name: Check identity
              run: aws sts get-caller-identity

            - name: Terraform Init
              run: terraform init

            - name: Terraform Format Check
              run: terraform fmt -check -diff

            - name: Terraform Validate
              run:
                  terraform validate

                  # ---------------- PLAN ----------------

            - name: Terraform Plan
              if: ${{ github.event.client_payload.action == 'plan'  ||  github.event.inputs.action == 'plan' }}
              run: |
                  terraform plan -input=false -var-file='terraform.tfvars'
                  echo "Terraform plan completed. Exiting workflow safely.
                  exit 0 


                      # ---------------- APPLY ----------------

            - name: Terraform Apply
              if: ${{  github.event.client_payload.action == 'apply' || github.event.inputs.action == 'apply' }}
              run:
                  terraform apply -auto-approve -var-file='terraform.tfvars'

                  # ---------------- DESTROY ----------------

            - name: Terraform Destroy
              if: ${{ github.event.client_payload.action == 'destroy' || github.event.inputs.action == 'destroy' }}
              run: |
                  echo "⚠️ Destroying infra..."
                  terraform destroy -auto-approve -var-file='terraform.tfvars'
                  echo "⚠️ Destroy completed. Exiting workflow."
                  exit 0

            # - name: Update kubeconfig
            #   if: ${{ github.event.client_payload.action == 'apply' || github.event.inputs.action == 'apply' }}
            #   run: |
            #       CLUSTER_NAME=$(aws eks list-clusters --region $AWS_REGION --query "clusters[?starts_with(@, 'Demo-eks-cluster')]" --output text)
            #       aws eks update-kubeconfig --region $AWS_REGION --name $CLUSTER_NAME
